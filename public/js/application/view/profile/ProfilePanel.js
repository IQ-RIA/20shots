// Generated by CoffeeScript 1.3.3

define(['text!j/view/profile/ProfilePanel.tpl', 'j/core/utils', 'j/core/base/Page', 'plugins/combo', 'text!j/view/profile/WorkStatusTpl.tpl'], function(tpl, utils, Page, plugin, workStatusTpl) {
  return Page.extend({
    tpl: _.template(tpl),
    workStatusTpl: _.template(workStatusTpl),
    events: {
      'click [name="submitButton"]': 'onSubmitButtonClick',
      'click [name="resetButton"]': 'onResetButtonClick',
      'change #isEmployee': 'onWorkStatusChanged'
    },
    doRender: function() {
      var user;
      user = J.app.instance().getUser();
      return this.tpl({
        personalDataTitle: "Personal Data",
        workFieldSetTitle: "Work",
        studyFieldSetTitle: "Education",
        title: "My Profile",
        firstNameTitle: "First Name:",
        lastNameTitle: "Last Name:",
        emailTitle: "Email:",
        workTitle: "I want work",
        facultyTitle: "Faculty:",
        passwordTitle: "Password:",
        passwordAgainTitle: "Same password:",
        email: user.get("email"),
        firstName: user.get("firstName"),
        lastName: user.get("lastName"),
        cityTitle: user.get("cityTitle"),
        universityTitle: user.get("universityTitle"),
        universityLabelTitle: "University:",
        cityLabelTitle: "City:"
      });
    },
    applyValues: function() {
      var user;
      user = J.app.instance().getUser();
      return $("#profile-form [name]").each(function(index, item) {
        var attrName;
        item = $(item);
        attrName = item.attr("name");
        if (typeof user.attributes[attrName] === "undefined" && user.hiddenAttributes.indexOf(attrName) === -1) {
          return item.val(user.get(attrName));
        }
      });
    },
    getPageName: function() {
      return 'profile';
    },
    onSubmitButtonClick: function() {
      var confirmPassword, form, message, password, user;
      form = $("#profile-form");
      user = J.app.instance().getUser();
      password = $("#password", form).val();
      confirmPassword = $("#confirmPassword", form).val();
      message = null;
      if (password !== confirmPassword) {
        message = "Passwords didn't match";
      }
      if (password.length < 6) {
        message = "Minimum length for password is 6 letters";
      }
      if (message) {
        return J.fire("error", message);
      }
      return J.Ajax.put({
        url: J.links.user.profile,
        data: {
          password: password
        },
        success: this.onProfileSaved,
        scope: this
      });
    },
    onResetButtonClick: function() {
      return J.fire("error");
    },
    onProfileSaved: function(response) {
      if (!response.success) {
        J.fire("error", response.errors);
      }
      return J.fire("success");
    },
    onWorkStatusChanged: function(e) {
      var target;
      target = $(e.target);
      if (target.is(":checked")) {
        return this.showWorkStatusField();
      } else {
        return this.hideWorkStatusField();
      }
    },
    showWorkStatusField: function() {
      return $(".work-status-pl").html(this.workStatusTpl());
    },
    hideWorkStatusField: function() {
      return $(".work-status-pl").html("");
    }
  });
});
