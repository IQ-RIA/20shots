// Generated by CoffeeScript 1.3.3

define(['j/core/base/View', 'text!j/components/search/Search.tpl'], function(View, tpl) {
  return View.extend({
    el: ".search-placeholder",
    tpl: _.template(tpl),
    searchTimeout: null,
    lastValue: "",
    events: {
      'keyup .search-field': 'onChanged',
      'click .icon-remove': 'onRemoveIconClick'
    },
    doRender: function() {
      return this.tpl();
    },
    afterRender: function() {
      View.prototype.afterRender.apply(this, arguments);
      return this.updateRemoveIconState();
    },
    /*
    			updates state of remove-icon
    			adds or removes hidden-class
    */

    updateRemoveIconState: function() {
      var action;
      if (this.lastValue) {
        action = "removeClass";
      } else {
        action = "addClass";
      }
      return $(".icon-remove", this.$el)[action]("hidden");
    },
    /*
    		 	function will fire in case when user changed the search-field
    			@param {Event} e
    			@returns {undefined}
    */

    onChanged: function(e) {
      return this.doSearch($(e.target).val());
    },
    /*
    			@param {String} val
    		 	@returns {undefined}
    */

    doSearch: function(val) {
      var callback;
      callback = _.bind(function() {
        if (this.lastValue !== val) {
          this.doSearchQuery(val);
          this.lastValue = val;
        }
        return this.updateRemoveIconState();
      }, this);
      clearTimeout(this.searchTimeout);
      return this.searchTimeout = setTimeout(callback, 200);
    },
    /*
    			calls required method in parent component to notify about search-field changed
    		 	@param {String} val
    		 	@returns {undefined}
    */

    doSearchQuery: function(val) {
      return this.trigger("change", this, val);
    },
    /*
    			function fires when user clicks on remove-icon
    			removes search-text
    */

    onRemoveIconClick: function() {
      $(".search-field", this.$el).val("");
      return this.doSearch("");
    }
  });
});
